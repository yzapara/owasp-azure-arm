{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "target": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the website to scan, starting with HTTP/HTTPS"
            }
        },
        "spiderTime": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 15,
            "metadata": {
                "description": "How long to spend spidering the site, in minutes"
            }
        }
    },
    "variables": {
        "reportName": "owasp-report.xml",
        "blobContainerName": "reports",
        "image": "owasp/zap2docker-stable",
        "storageAccountName": "[uniquestring(resourceGroup().id)]",
        "cpuCores": "1.0",
        "memoryInGb": "1.5",
        "containerGroupName": "zapcontainer",
        "containerName": "zap",
        "singleQuote": "'",
        "cmdZapStart": "zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.key=abcd -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true",
        "cmdDirMakeOutput": "mkdir output",
        "cmdDirSymlinkWrk": "ln -s output wrk",
        "cmdZapScan": "[concat('/zap/zap-baseline.py -t ', parameters('target'), ' -d -m ', parameters('spiderTime'), ' -x ', variables('reportName'))]",
        "cmdWgetPutReport": "[concat('wget -N --method=PUT --header=\"x-ms-blob-type: BlockBlob\" --body-file=output/', variables('reportName'), ' \"https://', variables('storageAccountName'),'.blob.core.windows.net/', variables('blobContainerName'), '/', variables('reportName'), '?')]",
        "accountSasProperties": {
            "signedServices": "bfqt",
            "signedPermission": "rwdlacup",
            "signedProtocol": "https",
            "signedStart": "2020-02-01T11:11:11Z",
            "signedExpiry": "2029-01-01T11:11:11Z",
            "signedResourceTypes": "sco",
            "keyToSign": "key1"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {},
            "resources": [
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2018-03-01-preview",
                    "name": "[concat('default/', variables('blobContainerName'))]",
                    "dependsOn": [
                        "[variables('storageAccountName')]"
                    ],
                    "properties": {
                        "publicAccess": "None"
                    }
                }
            ]
        },
        {
            "name": "[variables('containerGroupName')]",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-02-01-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
            ],
            "properties": {
                "containers": [
                    {
                        "name": "[variables('containerName')]",
                        "properties": {
                            "image": "[variables('image')]",
                            "command": [
                                "/bin/bash",
                                "-c",
                                "[concat('($ZAPCOMMAND) & $MKDIROUTPUT && $SYMLINKWRK && sleep 30 && $SCAN ; sleep 10 ; ', variables('cmdWgetPutReport'), listAccountSas(variables('storageAccountName'), '2018-02-01', variables('accountSasProperties')).accountSasToken, '\"')]"
                            ],
                            "environmentVariables": [
                                {
                                    "name": "ZAPCOMMAND",
                                    "value": "[variables('cmdZapStart')]"
                                },
                                {
                                    "name": "MKDIROUTPUT",
                                    "value": "[variables('cmdDirMakeOutput')]"
                                },
                                {
                                    "name": "SYMLINKWRK",
                                    "value": "[variables('cmdDirSymlinkWrk')]"
                                },
                                {
                                    "name": "SCAN",
                                    "value": "[variables('cmdZapScan')]"
                                },
                                {
                                    "name": "PUTREPORT",
                                    "value": "[variables('cmdWgetPutReport')]"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "[variables('cpuCores')]",
                                    "memoryInGb": "[variables('memoryInGb')]"
                                }
                            }
                        }
                    }
                ],
                "restartPolicy": "Never",
                "osType": "Linux"
            }
        }
    ],
    "outputs": {
        "reportStorageAccount": {
          "type": "string",
          "value": "[variables('storageAccountName')]"
        },
        "reportBlobContainer": {
            "type": "string",
            "value": "[variables('blobContainerName')]"
        },
        "reportFilename": {
            "type": "string",
            "value": "[variables('reportName')]"
        },
        "reportSasToken": {
            "type": "string",
            "value": "[listAccountSas(variables('storageAccountName'), '2019-06-01', variables('accountSasProperties')).accountSasToken]"
        }
    }
}
